---- On Metaphor 

# Last year reference
 * Last year I left with an Aristole quote on Systems Thinking.
 * So as I way saying.
 * The greatest thing by far is to be a master of metaphor – Aristotle

# Metaphor is powerful
 * 'harness the power of metaphors to persuade and inform'
 * They make the complex simple and the controversial palatable.

# Metaphor teaches. Metaphor gives us assistance. Metaphor Influences. 
 * Educate (greenhouse effect), 
 * Assist (one tech to another, nodes instead of web pages). 
 * (Less obvious) Influence (prudentail rock in logo)

# Metaphor constrains.
- In a domain with a central metaphor in it's name. That can constrain our thinking to thinking we must be like the other forms of it. For examples... engineering....


-=-- Engineering History ----

1968, Garmisch, software crisis (over budget, time, inefficient, low quality, did not meet requirements, difficult to maintain, never delivered)

Widespread concern at the growing number of software types to hardware types. Lack of pride.
Their estimates were sometimes over 30% out.

"The phrase ‘software engineering’ was deliberately chosen as being provocative

Software guys called themselves 'crofters' to the 'industrialists'.

We build systems like the Wright brothers built airplanes — build the whole thing, push it off the cliff, let it crash, and start over again.

---- The Engineering Metaphor

# Our interpretation of engineering has misled us


Certification. Engineers have a standard, with insurance, who you can sue if you project goes wrong.

??? Has anyone ever worked with an architect (master engineer) who planned out dozens of systems in Visio before the biz problem was understood and evolving ???

Real engineering is more about prototypes and solving problem within contraints. It is actually a good metaphor, but evidence of our behaviour shows we don't think that way.

"The other big issue is conformity. We have built our education systems on the model of fast food. This is something Jamie Oliver talked about the other day. You know there are two models of quality assurance in catering. One is fast food, where everything is standardized. The other are things like Zagat and Michelin restaurants, where everything is not standardized, they're customized to local circumstances. And we have sold ourselves into a fast food model of education, and it's impoverishing our spirit and our energies as much as fast food is depleting our physical bodies."

---- The Cultivation Metaphor

# Why it is more aligned to our industry (ha!).

"So I think we have to change metaphors. We have to go from what is essentially an industrial model of education, a manufacturing model, which is based on linearity and conformity and batching people. We have to move to a model that is based more on principles of agriculture. We have to recognize that human flourishing is not a mechanical process; it's an organic process. And you cannot predict the outcome of human development. All you can do, like a farmer, is create the conditions under which they will begin to flourish."

Agriculture - Still a loaded term. Think primitive. That's why Cultivation

# Programmers are more like gardeners. Managers are more like farmers. (gag: factory farming)
# Slack Time. field spare, bugs, growing/prune code like gardeners. Growing OO.
# Project Gardening



---- Finish


I want you to think in cultivation. Cultivate your code, cultivate your product and grow your people.


